import { useMemo, useState } from "react";
import ServiceCard from "./ServiceCard";
import SearchBar from "./SearchBar";

// ƒê·ªãnh nghƒ©a MLT_SERVICES v·ªõi n·ªôi dung th·ª±c t·∫ø t·ª´ MLT
const MLT_SERVICES = [
  {
    id: "1",
    title: "Tuy·ªÉn sinh 2025",
    description: "K·ªãch b·∫£n video tuy·ªÉn sinh ƒë·∫°i h·ªçc MLT nƒÉm 2025",
    category: "Tuy·ªÉn sinh",
    price: 500000,
    duration: 3,
    icon: "üéì",
    features: [
      "Gi·ªõi thi·ªáu ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o",
      "Th√¥ng tin tuy·ªÉn sinh",
      "∆Øu ƒëai h·ªçc ph√≠",
    ],
    content:
      "Nh√¢n v·∫≠t: Ph·ª• huynh & C·ªë v·∫•n tuy·ªÉn sinh MLT\nB·ªëi c·∫£nh: VƒÉn ph√≤ng t∆∞ v·∫•n tuy·ªÉn sinh\nTone: Th√¢n thi·ªán - Chuy√™n nghi·ªáp\nN·ªôi dung: Gi·ªõi thi·ªáu c√°c ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o ch·∫•t l∆∞·ª£ng cao, c∆° h·ªôi vi·ªác l√†m v√† c√°c ∆∞u ƒë√£i ƒë·∫∑c bi·ªát cho nƒÉm h·ªçc 2025.",
    tone: "Th√¢n thi·ªán - Chuy√™n nghi·ªáp",
  },
  {
    id: "2",
    title: "ƒê√†o t·∫°o k·ªπ nƒÉng",
    description: "Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o k·ªπ nƒÉng ngh·ªÅ nghi·ªáp t·∫°i MLT",
    category: "ƒê√†o t·∫°o",
    price: 800000,
    duration: 4,
    icon: "‚ö°",
    features: ["K·ªπ nƒÉng th·ª±c h√†nh", "Ch·ª©ng ch·ªâ ngh·ªÅ nghi·ªáp", "C∆° h·ªôi vi·ªác l√†m"],
    content:
      "Nh√¢n v·∫≠t: Gi·∫£ng vi√™n & H·ªçc vi√™n\nB·ªëi c·∫£nh: Ph√≤ng th·ª±c h√†nh & L·ªõp h·ªçc\nTone: NƒÉng ƒë·ªông - Truy·ªÅn c·∫£m h·ª©ng\nN·ªôi dung: Gi·ªõi thi·ªáu ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o k·ªπ nƒÉng ngh·ªÅ nghi·ªáp, ph∆∞∆°ng ph√°p h·ªçc t·∫≠p hi·ªán ƒë·∫°i v√† c∆° h·ªôi ph√°t tri·ªÉn s·ª± nghi·ªáp.",
    tone: "NƒÉng ƒë·ªông - Truy·ªÅn c·∫£m h·ª©ng",
  },
  {
    id: "3",
    title: "Nghi√™n c·ª©u khoa h·ªçc",
    description: "Ho·∫°t ƒë·ªông nghi√™n c·ª©u khoa h·ªçc v√† ·ª©ng d·ª•ng c√¥ng ngh·ªá",
    category: "Nghi√™n c·ª©u",
    price: 1200000,
    duration: 6,
    icon: "üî¨",
    features: ["D·ª± √°n nghi√™n c·ª©u", "C√¥ng b·ªë khoa h·ªçc", "·ª®ng d·ª•ng th·ª±c t·∫ø"],
    content:
      "Nh√¢n v·∫≠t: Nh√† nghi√™n c·ª©u & Chuy√™n gia\nB·ªëi c·∫£nh: Ph√≤ng th√≠ nghi·ªám & H·ªôi th·∫£o khoa h·ªçc\nTone: Chuy√™n nghi·ªáp - H·ªçc thu·∫≠t\nN·ªôi dung: Tr√¨nh b√†y c√°c th√†nh t·ª±u nghi√™n c·ª©u, d·ª± √°n khoa h·ªçc v√† ·ª©ng d·ª•ng c√¥ng ngh·ªá ti√™n ti·∫øn trong gi√°o d·ª•c.",
    tone: "Chuy√™n nghi·ªáp - H·ªçc thu·∫≠t",
  },
  {
    id: "4",
    title: "H·ªôi th·∫£o chuy√™n ƒë·ªÅ",
    description: "T·ªï ch·ª©c h·ªôi th·∫£o v√† s·ª± ki·ªán chuy√™n ƒë·ªÅ",
    category: "S·ª± ki·ªán",
    price: 600000,
    duration: 2,
    icon: "üé§",
    features: ["Chuy√™n gia h√†ng ƒë·∫ßu", "N·ªôi dung c·∫≠p nh·∫≠t", "Networking"],
    content:
      "Nh√¢n v·∫≠t: Chuy√™n gia & Ng∆∞·ªùi tham d·ª±\nB·ªëi c·∫£nh: H·ªôi tr∆∞·ªùng & Kh√¥ng gian networking\nTone: Chuy√™n nghi·ªáp - G·∫Øn k·∫øt\nN·ªôi dung: Gi·ªõi thi·ªáu ch∆∞∆°ng tr√¨nh h·ªôi th·∫£o v·ªõi c√°c chuy√™n gia h√†ng ƒë·∫ßu, n·ªôi dung c·∫≠p nh·∫≠t xu h∆∞·ªõng v√† c∆° h·ªôi giao l∆∞u.",
    tone: "Chuy√™n nghi·ªáp - G·∫Øn k·∫øt",
  },
  {
    id: "5",
    title: "T∆∞ v·∫•n chuy√™n m√¥n",
    description: "D·ªãch v·ª• t∆∞ v·∫•n chuy√™n m√¥n v√† ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp",
    category: "T∆∞ v·∫•n",
    price: 300000,
    duration: 1,
    icon: "üí¨",
    features: [
      "T∆∞ v·∫•n c√° nh√¢n",
      "ƒê·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp",
      "K·∫ø ho·∫°ch ph√°t tri·ªÉn",
    ],
    content:
      "Nh√¢n v·∫≠t: C·ªë v·∫•n & H·ªçc sinh/Sinh vi√™n\nB·ªëi c·∫£nh: Ph√≤ng t∆∞ v·∫•n c√° nh√¢n\nTone: Th√¢n thi·ªán - H·ªó tr·ª£\nN·ªôi dung: Cung c·∫•p d·ªãch v·ª• t∆∞ v·∫•n chuy√™n m√¥n, ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp v√† x√¢y d·ª±ng k·∫ø ho·∫°ch ph√°t tri·ªÉn c√° nh√¢n.",
    tone: "Th√¢n thi·ªán - H·ªó tr·ª£",
  },
  {
    id: "6",
    title: "Kh√≥a h·ªçc online",
    description: "N·ªÅn t·∫£ng h·ªçc tr·ª±c tuy·∫øn v·ªõi c√¥ng ngh·ªá hi·ªán ƒë·∫°i",
    category: "E-learning",
    price: 400000,
    duration: 3,
    icon: "üíª",
    features: ["H·ªçc linh ho·∫°t", "C√¥ng ngh·ªá AI", "Ch·ª©ng ch·ªâ ƒëi·ªán t·ª≠"],
    content:
      "Nh√¢n v·∫≠t: Gi·∫£ng vi√™n online & H·ªçc vi√™n\nB·ªëi c·∫£nh: M√¥i tr∆∞·ªùng h·ªçc t·∫≠p s·ªë\nTone: Hi·ªán ƒë·∫°i - Ti·ªán l·ª£i\nN·ªôi dung: Gi·ªõi thi·ªáu n·ªÅn t·∫£ng h·ªçc tr·ª±c tuy·∫øn v·ªõi c√¥ng ngh·ªá AI, ph∆∞∆°ng ph√°p h·ªçc t·∫≠p linh ho·∫°t v√† ch·ª©ng ch·ªâ ƒëi·ªán t·ª≠.",
    tone: "Hi·ªán ƒë·∫°i - Ti·ªán l·ª£i",
  },
];

export default function ServiceGrid({
  value,
  onChange,
  onServiceDataChange,
}: {
  value: string[];
  onChange: (v: string[]) => void;
  onServiceDataChange?: (serviceData: any[]) => void;
}) {
  const [q, setQ] = useState("");
  const filtered = useMemo(() => {
    const kw = q.trim().toLowerCase();
    if (!kw) return MLT_SERVICES;
    return MLT_SERVICES.filter(
      (s) =>
        s.title.toLowerCase().includes(kw) ||
        s.description.toLowerCase().includes(kw)
    );
  }, [q]);

  const toggle = (t: string) => {
    const next = value.includes(t)
      ? value.filter((x) => x !== t)
      : [...value, t];
    onChange(next);

    // Truy·ªÅn d·ªØ li·ªáu chi ti·∫øt c·ªßa c√°c d·ªãch v·ª• ƒë√£ ch·ªçn
    if (onServiceDataChange) {
      const selectedServices = MLT_SERVICES.filter((service) =>
        next.includes(service.title)
      );
      onServiceDataChange(selectedServices);
    }
  };

  return (
    <div id="services" className="space-y-4">
      <SearchBar onChange={setQ} />
      <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {filtered.map((s) => (
          <ServiceCard
            key={s.id}
            svc={s}
            selected={value.includes(s.title)}
            onToggle={toggle}
          />
        ))}
      </div>
      <div className="text-sm text-gray-500 flex items-center gap-2">
        <div className="w-2 h-2 rounded-full bg-green-500" />
        ƒê√£ ch·ªçn:{" "}
        <b className="text-gray-900 dark:text-gray-100">{value.length}</b> d·ªãch
        v·ª•
      </div>
    </div>
  );
}
