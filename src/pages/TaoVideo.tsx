import React, { useState } from "react";
import { motion } from "framer-motion";
import { Button } from "../components/ui/button";
import { Textarea } from "../components/ui/textarea";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "../components/ui/card";
import { Badge } from "../components/ui/badge";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../components/ui/select";

// Removed anime.js, using Framer Motion instead

interface VideoSettings {
  duration: "15" | "30" | "60" | "120";
  style: "modern" | "classic" | "minimal" | "creative";
  music: "upbeat" | "calm" | "dramatic" | "corporate";
}

export default function TaoVideo() {
  const [videoScript, setVideoScript] = useState("");
  const [videoSettings, setVideoSettings] = useState<VideoSettings>({
    duration: "30",
    style: "modern",
    music: "upbeat",
  });
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedVideo, setGeneratedVideo] = useState("");
  const [showPreview, setShowPreview] = useState(false);
  const [copySuccess, setCopySuccess] = useState(false);
  const [error, setError] = useState("");

  // Using Framer Motion for animations - no refs needed

  const handleGenerate = async () => {
    if (!videoScript.trim()) {
      setError("Vui l√≤ng nh·∫≠p k·ªãch b·∫£n video tr∆∞·ªõc khi t·∫°o!");
      return;
    }

    setIsGenerating(true);
    setShowPreview(false);
    setError("");

    try {
      // Simulate AI video generation
      await new Promise((resolve) => setTimeout(resolve, 3000));

      // Generate sample video info based on settings
      const sampleVideo = generateSampleVideo(videoScript, videoSettings);
      setGeneratedVideo(sampleVideo);
      setShowPreview(true);
    } catch (error) {
      // eslint-disable-next-line no-console
      console.error("Error generating video:", error);
      setError("C√≥ l·ªói x·∫£y ra khi t·∫°o video. Vui l√≤ng th·ª≠ l·∫°i!");
    } finally {
      setIsGenerating(false);
    }
  };

  const generateSampleVideo = (script: string, settings: VideoSettings) => {
    const styleMap = {
      modern: "hi·ªán ƒë·∫°i v√† s√°ng t·∫°o",
      classic: "c·ªï ƒëi·ªÉn v√† thanh l·ªãch",
      minimal: "t·ªëi gi·∫£n v√† tinh t·∫ø",
      creative: "s√°ng t·∫°o v√† ƒë·ªôc ƒë√°o",
    };

    const musicMap = {
      upbeat: "nƒÉng ƒë·ªông v√† vui t∆∞∆°i",
      calm: "nh·∫π nh√†ng v√† th∆∞ gi√£n",
      dramatic: "k·ªãch t√≠nh v√† m·∫°nh m·∫Ω",
      corporate: "chuy√™n nghi·ªáp v√† trang tr·ªçng",
    };

    const durationMap = {
      "15": "15 gi√¢y",
      "30": "30 gi√¢y",
      "60": "1 ph√∫t",
      "120": "2 ph√∫t",
    };

    return `[VIDEO AI - ${durationMap[settings.duration].toUpperCase()}]

K·ªäCH B·∫¢N: ${script}

TH√îNG S·ªê VIDEO:
- Th·ªùi l∆∞·ª£ng: ${durationMap[settings.duration]}
- Phong c√°ch: ${styleMap[settings.style]}
- Nh·∫°c n·ªÅn: ${musicMap[settings.music]}

---

PH√ÇN C·∫¢NH CHI TI·∫æT:

C·∫¢NH 1: M·ªü ƒë·∫ßu (0-${Math.floor(parseInt(settings.duration) * 0.1)}s)
- Fade in v·ªõi logo
- Text animation gi·ªõi thi·ªáu ch·ªß ƒë·ªÅ
- Nh·∫°c n·ªÅn ${musicMap[settings.music]}

C·∫¢NH 2: N·ªôi dung ch√≠nh (${Math.floor(
      parseInt(settings.duration) * 0.1
    )}-${Math.floor(parseInt(settings.duration) * 0.8)}s)
- Chuy·ªÉn c·∫£nh m∆∞·ª£t m√† v·ªõi ${styleMap[settings.style]}
- Text overlay v·ªõi key points
- Visual effects ph√π h·ª£p phong c√°ch
- Background music ${musicMap[settings.music]}

C·∫¢NH 3: K·∫øt th√∫c (${Math.floor(parseInt(settings.duration) * 0.8)}-${
      settings.duration
    }s)
- Call-to-action r√µ r√†ng
- Fade out v·ªõi th√¥ng tin li√™n h·ªá
- Nh·∫°c k·∫øt th√∫c ${musicMap[settings.music]}

---

K·ª∏ THU·∫¨T:
- ƒê·ªô ph√¢n gi·∫£i: 1920x1080 (Full HD)
- Frame rate: 30fps
- Codec: H.264
- Audio: AAC, 128kbps
- Phong c√°ch: ${styleMap[settings.style]}
- Nh·∫°c n·ªÅn: ${musicMap[settings.music]}

---

L∆ØU √ù:
- Video ${durationMap[settings.duration]} ph√π h·ª£p cho ${
      styleMap[settings.style]
    }
- Phong c√°ch ${styleMap[settings.style]} t·ªëi ∆∞u cho ${musicMap[settings.music]}
- ƒê·∫£m b·∫£o text readable v√† visual appealing`;
  };

  const handleCopyVideo = async () => {
    try {
      await navigator.clipboard.writeText(generatedVideo);
      setCopySuccess(true);
      setTimeout(() => setCopySuccess(false), 2000);
    } catch (err) {
      setError("Kh√¥ng th·ªÉ copy. Vui l√≤ng th·ª≠ l·∫°i!");
    }
  };

  const handleDownloadVideo = () => {
    const blob = new Blob([generatedVideo], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `video-script-${videoSettings.duration}s-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <motion.div
          className="text-center mb-12"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <h1 className="text-4xl lg:text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-4">
            üé¨ T·∫°o Video AI
          </h1>
          <p className="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            Chuy·ªÉn ƒë·ªïi k·ªãch b·∫£n th√†nh video chuy√™n nghi·ªáp v·ªõi c√¥ng ngh·ªá AI ti√™n
            ti·∫øn
          </p>
        </motion.div>

        {/* Main Content */}
        <div className="grid gap-8 lg:grid-cols-2">
          {/* Script Input */}
          <motion.div
            initial={{ opacity: 0, x: -50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ 
              duration: 0.8, 
              delay: 0.2,
              type: "spring",
              stiffness: 100,
              damping: 20
            }}
          >
            <Card className="h-full shadow-xl border-0 bg-gradient-to-br from-white to-blue-50 dark:from-gray-800 dark:to-gray-900">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  ‚úçÔ∏è Nh·∫≠p K·ªãch B·∫£n
                </CardTitle>
                <CardDescription>
                  Vi·∫øt k·ªãch b·∫£n ho·∫∑c m√¥ t·∫£ video b·∫°n mu·ªën t·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                    K·ªãch b·∫£n video
                  </label>
                  <Textarea
                    placeholder="Nh·∫≠p k·ªãch b·∫£n chi ti·∫øt cho video c·ªßa b·∫°n..."
                    value={videoScript}
                    onChange={(e) => setVideoScript(e.target.value)}
                    className="min-h-32"
                  />
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                      Th·ªùi l∆∞·ª£ng
                    </label>
                    <Select
                      value={videoSettings.duration}
                      onValueChange={(value: VideoSettings["duration"]) =>
                        setVideoSettings({ ...videoSettings, duration: value })
                      }
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="15">15 gi√¢y</SelectItem>
                        <SelectItem value="30">30 gi√¢y</SelectItem>
                        <SelectItem value="60">1 ph√∫t</SelectItem>
                        <SelectItem value="120">2 ph√∫t</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <label className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                      Phong c√°ch
                    </label>
                    <Select
                      value={videoSettings.style}
                      onValueChange={(value: VideoSettings["style"]) =>
                        setVideoSettings({ ...videoSettings, style: value })
                      }
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="modern">Hi·ªán ƒë·∫°i</SelectItem>
                        <SelectItem value="classic">C·ªï ƒëi·ªÉn</SelectItem>
                        <SelectItem value="minimal">T·ªëi gi·∫£n</SelectItem>
                        <SelectItem value="creative">S√°ng t·∫°o</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div>
                  <label className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                    Nh·∫°c n·ªÅn
                  </label>
                  <Select
                    value={videoSettings.music}
                    onValueChange={(value: VideoSettings["music"]) =>
                      setVideoSettings({ ...videoSettings, music: value })
                    }
                  >
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="upbeat">NƒÉng ƒë·ªông</SelectItem>
                      <SelectItem value="calm">Nh·∫π nh√†ng</SelectItem>
                      <SelectItem value="dramatic">K·ªãch t√≠nh</SelectItem>
                      <SelectItem value="corporate">Chuy√™n nghi·ªáp</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                {error && (
                  <motion.div
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="p-3 bg-red-100 dark:bg-red-900/20 border border-red-300 dark:border-red-700 rounded-lg"
                  >
                    <p className="text-red-600 dark:text-red-400 text-sm">{error}</p>
                  </motion.div>
                )}

                <motion.div
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  transition={{ type: "spring", stiffness: 400, damping: 17 }}
                >
                  <Button
                    onClick={handleGenerate}
                    disabled={!videoScript.trim() || isGenerating}
                    className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg"
                    size="lg"
                  >
                    {isGenerating ? (
                      <div className="flex items-center gap-2">
                        <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                        ƒêang t·∫°o video...
                      </div>
                    ) : (
                      "üé¨ T·∫°o Video AI"
                    )}
                  </Button>
                </motion.div>
              </CardContent>
            </Card>
          </motion.div>

          {/* Video Preview */}
          <motion.div
            initial={{ opacity: 0, x: 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ 
              duration: 0.8, 
              delay: 0.4,
              type: "spring",
              stiffness: 100,
              damping: 20
            }}
          >
            <Card className="h-full shadow-xl border-0 bg-gradient-to-br from-white to-purple-50 dark:from-gray-800 dark:to-gray-900">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                  üé• Xem Tr∆∞·ªõc Video
                </CardTitle>
                <CardDescription>
                  Video s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã ·ªü ƒë√¢y sau khi t·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent>
                {isGenerating ? (
                  <div className="aspect-video bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 rounded-lg flex items-center justify-center">
                    <div className="text-center">
                      <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                      <p className="text-gray-600 dark:text-gray-400">
                        ƒêang t·∫°o video...
                      </p>
                    </div>
                  </div>
                ) : showPreview && generatedVideo ? (
                  <motion.div 
                    className="space-y-4"
                    initial={{ scale: 0.8, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ 
                      duration: 0.6,
                      type: "spring",
                      stiffness: 100,
                      damping: 15
                    }}
                  >
                    <div className="aspect-video bg-gradient-to-br from-green-100 to-blue-200 dark:from-green-800 dark:to-blue-700 rounded-lg flex items-center justify-center shadow-inner">
                      <motion.div 
                        className="text-center"
                        initial={{ y: 20, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ delay: 0.3, duration: 0.5 }}
                      >
                        <motion.div 
                          className="text-6xl mb-4"
                          animate={{ 
                            rotate: [0, 5, -5, 0],
                            scale: [1, 1.1, 1]
                          }}
                          transition={{ 
                            duration: 2,
                            repeat: Infinity,
                            repeatType: "reverse"
                          }}
                        >
                          üé¨
                        </motion.div>
                        <p className="text-gray-800 dark:text-gray-200 font-semibold text-lg">
                          Video ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!
                        </p>
                      </motion.div>
                    </div>

                    <div className="bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 rounded-lg p-4">
                      <pre className="whitespace-pre-wrap text-sm text-gray-800 dark:text-gray-200 font-mono leading-relaxed max-h-32 overflow-y-auto">
                        {generatedVideo}
                      </pre>
                    </div>

                    <div className="flex gap-2">
                      <motion.div className="flex-1" whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }}>
                        <Button
                          onClick={handleCopyVideo}
                          variant="outline"
                          size="sm"
                          className="w-full border-blue-300 text-blue-600 hover:bg-blue-50 shadow-md"
                        >
                          {copySuccess ? "‚úÖ Copied!" : "üìã Copy"}
                        </Button>
                      </motion.div>
                      <motion.div className="flex-1" whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }}>
                        <Button
                          onClick={handleDownloadVideo}
                          variant="outline"
                          size="sm"
                          className="w-full border-purple-300 text-purple-600 hover:bg-purple-50 shadow-md"
                        >
                          üíæ Download
                        </Button>
                      </motion.div>
                    </div>
                  </motion.div>
                ) : (
                  <div className="aspect-video bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 rounded-lg flex items-center justify-center">
                    {videoScript ? (
                      <div className="text-center">
                        <div className="text-4xl mb-2">üé¨</div>
                        <p className="text-gray-600 dark:text-gray-400">
                          Nh·∫•n "T·∫°o Video AI" ƒë·ªÉ b·∫Øt ƒë·∫ßu
                        </p>
                      </div>
                    ) : (
                      <div className="text-center">
                        <div className="text-4xl mb-2">üìù</div>
                        <p className="text-gray-600 dark:text-gray-400">
                          Nh·∫≠p k·ªãch b·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu
                        </p>
                      </div>
                    )}
                  </div>
                )}

                {videoScript && !showPreview && (
                  <div className="mt-4 space-y-2">
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-gray-600 dark:text-gray-400">
                        Th·ªùi l∆∞·ª£ng:
                      </span>
                      <Badge variant="secondary">
                        {videoSettings.duration}s
                      </Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-gray-600 dark:text-gray-400">
                        Phong c√°ch:
                      </span>
                      <Badge variant="outline">{videoSettings.style}</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-gray-600 dark:text-gray-400">
                        Nh·∫°c n·ªÅn:
                      </span>
                      <Badge variant="secondary">{videoSettings.music}</Badge>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </motion.div>
        </div>
      </div>
    </div>
  );
}
