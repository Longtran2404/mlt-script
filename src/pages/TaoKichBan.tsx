"use client";

import React, { useState, useEffect } from "react";
import { ServiceMultiSelect } from "../components/ServiceMultiSelect";
import {
  Sparkles,
  Target,
  Clock,
  FileText,
  Loader2,
  CheckCircle,
  XCircle,
  Brain,
  Globe,
  Crown,
  Sword,
  Shield,
  Zap as Lightning,
  Flame,
  Mountain,
  TreePine,
  Gem,
  Trophy,
  Palette,
  Building2,
  AlertCircle,
} from "lucide-react";

type SubmitResult =
  | { ok: true; session_id: string; webhook_response: any }
  | { ok: false; message?: string; errors?: any };

type TabType =
  | "quest"
  | "characters"
  | "world"
  | "combat"
  | "magic"
  | "advanced"
  | "settings";

export default function TaoKichBan() {
  const [isMobile, setIsMobile] = useState(false);
  const [activeTab, setActiveTab] = useState<TabType>("quest");
  const [kichBan, setKichBan] = useState("");
  const [moTa, setMoTa] = useState("");
  const [nganh, setNganh] = useState("Gi√°o d·ª•c & ƒê√†o t·∫°o");
  const [brand, setBrand] = useState("VLU UNIVERSITY");
  const [tone, setTone] = useState("Chuy√™n nghi·ªáp ‚Äì Hi·ªán ƒë·∫°i ‚Äì ƒê√°ng tin c·∫≠y");
  const [duration, setDuration] = useState(180);
  const [dichVu, setDichVu] = useState<string[]>([]);
  const [questType, setQuestType] = useState("Tuy·ªÉn sinh");
  const [characterClass, setCharacterClass] = useState("C·ª≠ nh√¢n");
  const [worldZone, setWorldZone] = useState("C∆° s·ªü ch√≠nh");
  const [difficulty, setDifficulty] = useState("Trung b√¨nh");
  const [magicType, setMagicType] = useState("Tr·ª±c tuy·∫øn");
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<SubmitResult | null>(null);

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkMobile();
    window.addEventListener("resize", checkMobile);

    return () => window.removeEventListener("resize", checkMobile);
  }, []);

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setResult(null);

    try {
      const res = await fetch("/api/submit", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          kich_ban: kichBan || moTa,
          mo_ta: moTa,
          dich_vu: dichVu,
          nganh_nghe: nganh,
          brand,
          tone,
          duration_sec: Number(duration),
        }),
      });
      const data = (await res.json()) as SubmitResult;
      setResult(data);
    } catch (err: any) {
      setResult({ ok: false, message: err?.message || "Network error" });
    } finally {
      setLoading(false);
    }
  };

  if (isMobile) {
    // Mobile Layout - Red & White Theme
    return (
      <div className="min-h-screen bg-gradient-to-b from-slate-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 text-gray-900 dark:text-white">
        {/* Mobile Header - WOW Theme */}
        <div className="px-4 py-6 text-center bg-gradient-to-br from-blue-600 via-indigo-500 to-purple-600 text-white relative overflow-hidden">
          {/* Animated Background Elements */}
          <div className="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20viewBox%3D%220%200%2060%2060%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20fill%3D%22%23ffffff%22%20fill-opacity%3D%220.05%22%3E%3Ccircle%20cx%3D%2230%22%20cy%3D%2230%22%20r%3D%222%22/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-20"></div>

          <div className="flex items-center justify-center gap-2 mb-3 relative z-10">
            <div className="w-8 h-8 bg-gradient-to-br from-blue-400 to-indigo-500 rounded-full flex items-center justify-center animate-pulse">
              <FileText className="w-5 h-5 text-white" />
            </div>
            <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-400 via-indigo-400 to-purple-500 bg-clip-text text-transparent">
              VLU UNIVERSITY
            </h1>
            <div className="w-8 h-8 bg-gradient-to-br from-purple-400 to-pink-500 rounded-full flex items-center justify-center animate-pulse">
              <Trophy className="w-5 h-5 text-white" />
            </div>
          </div>
          <p className="text-sm text-blue-200 mb-2 font-medium">
            D·ªãch v·ª• Tuy·ªÉn sinh & ƒê√†o t·∫°o
          </p>
          <div className="flex justify-center gap-3 text-xs">
            <span className="flex items-center gap-1 bg-blue-800/50 px-2 py-1 rounded-full">
              <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
              CH·∫§T L∆Ø·ª¢NG
            </span>
            <span className="flex items-center gap-1 bg-purple-800/50 px-2 py-1 rounded-full">
              <div className="w-2 h-2 bg-purple-400 rounded-full animate-pulse"></div>
              UY T√çN
            </span>
            <span className="flex items-center gap-1 bg-indigo-800/50 px-2 py-1 rounded-full">
              <div className="w-2 h-2 bg-indigo-400 rounded-full animate-pulse"></div>
              HI·ªÜN ƒê·∫†I
            </span>
          </div>
        </div>

        {/* Mobile Form */}
        <form onSubmit={onSubmit} className="p-4 space-y-6 pb-20">
          {/* Th√¥ng tin Tuy·ªÉn sinh Section */}
          <div className="bg-white rounded-2xl p-4 border-2 border-blue-200 shadow-lg">
            <div className="flex items-center gap-2 mb-4">
              <FileText className="w-5 h-5 text-blue-600" />
              <h3 className="text-lg font-semibold text-gray-900">
                Th√¥ng tin Tuy·ªÉn sinh & ƒê√†o t·∫°o
              </h3>
            </div>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium mb-2 text-gray-900">
                  <span className="flex items-center gap-2">
                    <Lightning className="w-4 h-4 text-yellow-500" />
                    N·ªôi dung Ch√≠nh & Th√¥ng ƒëi·ªáp *
                  </span>
                </label>
                <textarea
                  required
                  value={kichBan}
                  onChange={(e) => setKichBan(e.target.value)}
                  placeholder="V√≠ d·ª•: Th√¥ng b√°o tuy·ªÉn sinh ng√†nh C√¥ng ngh·ªá th√¥ng tin, h·ªá ƒë·∫°i h·ªçc ch√≠nh quy nƒÉm 2024..."
                  className="w-full h-28 rounded-xl border-2 border-blue-200 bg-blue-50 px-3 py-3 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm resize-none"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2 text-gray-900">
                  <span className="flex items-center gap-2">
                    <Globe className="w-4 h-4 text-green-500" />
                    Chi ti·∫øt & Y√™u c·∫ßu ƒê·∫∑c bi·ªát
                  </span>
                </label>
                <textarea
                  value={moTa}
                  onChange={(e) => setMoTa(e.target.value)}
                  placeholder="Thi·∫øt l·∫≠p: ƒê·ªãa ƒëi·ªÉm, ƒë·ªëi t∆∞·ª£ng m·ª•c ti√™u, hi·ªáu ·ª©ng ƒë·∫∑c bi·ªát, l·ªùi k√™u g·ªçi h√†nh ƒë·ªông..."
                  className="w-full h-24 rounded-xl border-2 border-blue-200 bg-blue-50 px-3 py-3 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm resize-none"
                />
              </div>
            </div>
          </div>

          {/* Ng√†nh h·ªçc & Chuy√™n ng√†nh Section */}
          <div className="bg-white rounded-2xl p-4 border-2 border-purple-200 shadow-lg">
            <div className="flex items-center gap-2 mb-4">
              <Sword className="w-5 h-5 text-purple-600" />
              <h3 className="text-lg font-semibold text-gray-900">
                Ng√†nh h·ªçc & Chuy√™n ng√†nh
              </h3>
            </div>
            <p className="text-sm text-gray-600 mb-4">
              Ch·ªçn c√°c ng√†nh h·ªçc v√† chuy√™n ng√†nh ƒë√†o t·∫°o
            </p>
            <ServiceMultiSelect value={dichVu} onChange={setDichVu} />
          </div>

          {/* Th√¥ng tin Tuy·ªÉn sinh & C∆° s·ªü Section */}
          <div className="bg-white rounded-2xl p-4 border-2 border-green-200 shadow-lg">
            <div className="flex items-center gap-2 mb-4">
              <Mountain className="w-5 h-5 text-green-600" />
              <h3 className="text-lg font-semibold text-gray-900">
                Th√¥ng tin Tuy·ªÉn sinh & C∆° s·ªü
              </h3>
            </div>

            <div className="space-y-4">
              <div className="grid grid-cols-1 gap-4">
                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-900">
                    <span className="flex items-center gap-2">
                      <Trophy className="w-4 h-4 text-yellow-500" />
                      Lo·∫°i h√¨nh Tuy·ªÉn sinh
                    </span>
                  </label>
                  <select
                    value={questType}
                    onChange={(e) => setQuestType(e.target.value)}
                    className="w-full rounded-xl border-2 border-green-200 bg-green-50 px-3 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 text-sm"
                  >
                    <option value="Tuy·ªÉn sinh">üéì Tuy·ªÉn sinh ƒê·∫°i h·ªçc</option>
                    <option value="Tuy·ªÉn sinh Cao ƒë·∫≥ng">
                      üéì Tuy·ªÉn sinh Cao ƒë·∫≥ng
                    </option>
                    <option value="Tuy·ªÉn sinh Sau ƒë·∫°i h·ªçc">
                      üéì Tuy·ªÉn sinh Sau ƒë·∫°i h·ªçc
                    </option>
                    <option value="Tuy·ªÉn sinh Li√™n th√¥ng">
                      üéì Tuy·ªÉn sinh Li√™n th√¥ng
                    </option>
                    <option value="Tuy·ªÉn sinh V·ª´a h·ªçc v·ª´a l√†m">
                      üéì Tuy·ªÉn sinh V·ª´a h·ªçc v·ª´a l√†m
                    </option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-900">
                    <span className="flex items-center gap-2">
                      <Shield className="w-4 h-4 text-blue-500" />
                      B·∫±ng c·∫•p
                    </span>
                  </label>
                  <select
                    value={characterClass}
                    onChange={(e) => setCharacterClass(e.target.value)}
                    className="w-full rounded-xl border-2 border-green-200 bg-green-50 px-3 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 text-sm"
                  >
                    <option value="C·ª≠ nh√¢n">üéì C·ª≠ nh√¢n</option>
                    <option value="K·ªπ s∆∞">üéì K·ªπ s∆∞</option>
                    <option value="Th·∫°c sƒ©">üéì Th·∫°c sƒ©</option>
                    <option value="Ti·∫øn sƒ©">üéì Ti·∫øn sƒ©</option>
                    <option value="Ch·ª©ng ch·ªâ">üéì Ch·ª©ng ch·ªâ</option>
                  </select>
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2 text-gray-900">
                  <span className="flex items-center gap-2">
                    <TreePine className="w-4 h-4 text-green-500" />
                    C∆° s·ªü & ƒê·ªãa ƒëi·ªÉm
                  </span>
                </label>
                <select
                  value={worldZone}
                  onChange={(e) => setWorldZone(e.target.value)}
                  className="w-full rounded-xl border-2 border-green-200 bg-green-50 px-3 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 text-sm"
                >
                  <option value="C∆° s·ªü ch√≠nh">üè¢ C∆° s·ªü ch√≠nh - TP.HCM</option>
                  <option value="C∆° s·ªü 2">üè¢ C∆° s·ªü 2 - B√¨nh D∆∞∆°ng</option>
                  <option value="C∆° s·ªü 3">üè¢ C∆° s·ªü 3 - ƒê·ªìng Nai</option>
                  <option value="C∆° s·ªü 4">
                    üè¢ C∆° s·ªü 4 - B√† R·ªãa - V≈©ng T√†u
                  </option>
                  <option value="C∆° s·ªü 5">üè¢ C∆° s·ªü 5 - Long An</option>
                </select>
              </div>
            </div>
          </div>

          {/* C·∫•u h√¨nh N√¢ng cao Section */}
          <div className="bg-white rounded-2xl p-4 border-2 border-indigo-200 shadow-lg">
            <div className="flex items-center gap-2 mb-4">
              <Brain className="w-5 h-5 text-indigo-600" />
              <h3 className="text-lg font-semibold text-gray-900">
                C·∫•u h√¨nh N√¢ng cao
              </h3>
            </div>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium mb-3 text-gray-900">
                  <span className="flex items-center gap-2">
                    <Clock className="w-4 h-4 text-yellow-500" />
                    Th·ªùi l∆∞·ª£ng Video (gi√¢y)
                  </span>
                </label>

                <div className="space-y-3">
                  <input
                    type="range"
                    min="30"
                    max="300"
                    step="10"
                    value={duration}
                    onChange={(e) => setDuration(Number(e.target.value))}
                    className="w-full h-2 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg appearance-none cursor-pointer"
                  />
                  <div className="text-center">
                    <span className="text-lg font-semibold text-white bg-gradient-to-r from-yellow-500 to-orange-500 px-4 py-2 rounded-lg">
                      {duration} gi√¢y
                    </span>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-900">
                    <span className="flex items-center gap-2">
                      <Flame className="w-4 h-4 text-red-500" />
                      M·ª©c ƒë·ªô Ph·ª©c t·∫°p
                    </span>
                  </label>
                  <select
                    value={difficulty}
                    onChange={(e) => setDifficulty(e.target.value)}
                    className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50 px-3 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm"
                  >
                    <option value="ƒê∆°n gi·∫£n">üü¢ ƒê∆°n gi·∫£n</option>
                    <option value="Trung b√¨nh">üü° Trung b√¨nh</option>
                    <option value="Ph·ª©c t·∫°p">üî¥ Ph·ª©c t·∫°p</option>
                    <option value="Chuy√™n s√¢u">üü£ Chuy√™n s√¢u</option>
                    <option value="Nghi√™n c·ª©u">‚ö´ Nghi√™n c·ª©u</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2 text-gray-900">
                    <span className="flex items-center gap-2">
                      <Gem className="w-4 h-4 text-purple-500" />
                      H√¨nh th·ª©c ƒê√†o t·∫°o
                    </span>
                  </label>
                  <select
                    value={magicType}
                    onChange={(e) => setMagicType(e.target.value)}
                    className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50 px-3 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm"
                  >
                    <option value="Tr·ª±c tuy·∫øn">üíª Tr·ª±c tuy·∫øn</option>
                    <option value="Tr·ª±c ti·∫øp">üè¢ Tr·ª±c ti·∫øp</option>
                    <option value="K·∫øt h·ª£p">üîÑ K·∫øt h·ª£p</option>
                    <option value="T·ª´ xa">üåê T·ª´ xa</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          {/* Submit Button */}
          <button
            type="submit"
            disabled={loading || !kichBan.trim()}
            className="w-full bg-gradient-to-r from-yellow-500 via-orange-500 to-red-500 hover:from-yellow-600 hover:via-orange-600 hover:to-red-600 disabled:from-gray-400 disabled:to-gray-500 text-white py-4 px-6 rounded-2xl font-semibold transition-all duration-300 disabled:cursor-not-allowed flex items-center justify-center gap-2 text-lg shadow-lg transform hover:scale-105"
          >
            {loading ? (
              <>
                <Loader2 className="w-5 h-5 animate-spin" />
                ƒêang t·∫°o K·ªãch b·∫£n...
              </>
            ) : (
              <>
                <FileText className="w-5 h-5" />
                T·∫°o K·ªãch b·∫£n Tuy·ªÉn sinh
              </>
            )}
          </button>

          {/* Result Display */}
          {result && (
            <div className="mt-6">
              {result.ok ? (
                <div className="bg-green-50 border-2 border-green-200 rounded-2xl p-4">
                  <div className="flex items-center gap-2 mb-2">
                    <CheckCircle className="w-5 h-5 text-green-600" />
                    <span className="font-semibold text-green-800">
                      Th√†nh c√¥ng!
                    </span>
                  </div>
                  <p className="text-sm text-green-700">
                    Y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒëi. Session ID: {result.session_id}
                  </p>
                </div>
              ) : (
                <div className="bg-red-50 border-2 border-red-200 rounded-2xl p-4">
                  <div className="flex items-center gap-2 mb-2">
                    <XCircle className="w-5 h-5 text-red-600" />
                    <span className="font-semibold text-red-800">L·ªói!</span>
                  </div>
                  <p className="text-sm text-red-700">
                    {result.message || "C√≥ l·ªói x·∫£y ra"}
                  </p>
                </div>
              )}
            </div>
          )}
        </form>
      </div>
    );
  }

  // Desktop Layout - WOW Fantasy Theme
  return (
    <main className="min-h-screen bg-gradient-to-b from-blue-50 via-indigo-50 to-purple-100 relative overflow-hidden">
      {/* Animated Background Elements */}
      <div className="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20viewBox%3D%220%200%2060%2060%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20fill%3D%22%23ffffff%22%20fill-opacity%3D%220.03%22%3E%3Ccircle%20cx%3D%2230%22%20cy%3D%2230%22%20r%3D%222%22/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-30"></div>

      {/* Hero Header */}
      <header className="text-center space-y-6 sm:space-y-8 py-6 sm:py-12 px-4 sm:px-6 relative z-10">
        <div className="relative">
          {/* Epic Title with Glowing Effect */}
          <div className="inline-flex items-center gap-3 sm:gap-4 mb-4 sm:mb-6">
            <div className="w-10 h-10 sm:w-16 sm:h-16 bg-gradient-to-br from-yellow-400 via-orange-500 to-red-500 rounded-2xl flex items-center justify-center shadow-lg animate-pulse">
              <Sword className="w-5 h-5 sm:w-8 sm:h-8 text-white" />
            </div>
            <h1 className="text-4xl sm:text-6xl lg:text-8xl font-bold bg-gradient-to-r from-blue-400 via-indigo-500 to-purple-500 bg-clip-text text-transparent drop-shadow-lg">
              VLU UNIVERSITY
            </h1>
            <div className="w-10 h-10 sm:w-16 sm:h-16 bg-gradient-to-br from-blue-400 via-purple-500 to-indigo-500 rounded-2xl flex items-center justify-center shadow-lg animate-pulse">
              <Shield className="w-5 h-5 sm:w-8 sm:h-8 text-white" />
            </div>
          </div>

          {/* Subtitle with Epic Badges */}
          <div className="flex items-center justify-center gap-3 mb-6 sm:mb-8">
            <Trophy className="w-5 h-5 sm:w-6 sm:h-6 text-yellow-500" />
            <span className="text-sm sm:text-base font-bold text-gray-800 tracking-wider bg-gradient-to-r from-blue-400 to-indigo-500 bg-clip-text text-transparent">
              D·ªäCH V·ª§ TUY·ªÇN SINH & ƒê√ÄO T·∫†O
            </span>
            <Trophy className="w-5 h-5 sm:w-6 sm:h-6 text-yellow-500" />
          </div>
        </div>

        <h2 className="text-xl sm:text-3xl lg:text-4xl text-gray-800 font-light px-4 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent">
          X√¢y d·ª±ng Chi·∫øn l∆∞·ª£c Tuy·ªÉn sinh v·ªõi AI-Powered Content Creation
        </h2>

        <p className="text-gray-700 max-w-4xl mx-auto leading-relaxed text-base sm:text-lg px-4">
          Chinh ph·ª•c th·ªã tr∆∞·ªùng gi√°o d·ª•c v·ªõi s·ª± s√°ng t·∫°o chi·∫øn l∆∞·ª£c! N·ªÅn t·∫£ng AI
          ti√™n ti·∫øn c·ªßa ch√∫ng t√¥i bi·∫øn ƒë·ªïi t·∫ßm nh√¨n tuy·ªÉn sinh th√†nh nh·ªØng k·ªãch
          b·∫£n chuy√™n nghi·ªáp v·ªõi ph√¢n t√≠ch th·ªã tr∆∞·ªùng, th√¥ng tin chi ti·∫øt v√† k·∫ø
          ho·∫°ch th√†nh c√¥ng.
        </p>

        {/* Epic Features with Animated Icons */}
        <div className="flex flex-wrap justify-center items-center gap-6 sm:gap-8 text-sm sm:text-base text-gray-600 px-4">
          <div className="flex items-center gap-2 bg-gradient-to-r from-blue-100 to-indigo-100 px-4 py-2 rounded-full border border-blue-200">
            <div className="w-3 h-3 bg-blue-400 rounded-full animate-pulse"></div>
            <span className="font-semibold text-blue-700">
              üéì CH·∫§T L∆Ø·ª¢NG ƒê√ÄO T·∫†O
            </span>
          </div>
          <div className="flex items-center gap-2 bg-gradient-to-r from-purple-100 to-pink-100 px-4 py-2 rounded-full border border-purple-200">
            <div className="w-3 h-3 bg-purple-400 rounded-full animate-pulse"></div>
            <span className="font-semibold text-purple-700">
              üéØ CHI·∫æN L∆Ø·ª¢C TUY·ªÇN SINH
            </span>
          </div>
          <div className="flex items-center gap-2 bg-gradient-to-r from-green-100 to-emerald-100 px-4 py-2 rounded-full border border-green-200">
            <div className="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
            <span className="font-semibold text-green-700">
              üèÜ UY T√çN & CH·∫§T L∆Ø·ª¢NG
            </span>
          </div>
          <div className="flex items-center gap-2 bg-gradient-to-r from-indigo-100 to-blue-100 px-4 py-2 rounded-full border border-indigo-200">
            <div className="w-3 h-3 bg-indigo-400 rounded-full animate-pulse"></div>
            <span className="font-semibold text-indigo-700">
              üåü C√îNG NGH·ªÜ HI·ªÜN ƒê·∫†I
            </span>
          </div>
        </div>
      </header>

      {/* VLU Tuy·ªÉn sinh Tab System */}
      <div className="bg-white rounded-2xl border-2 border-blue-200 overflow-hidden shadow-xl mx-4 sm:mx-0">
        {/* Tab Headers */}
        <div className="flex border-b-2 border-blue-100 bg-gradient-to-r from-blue-50 to-white overflow-x-auto scrollbar-hide">
          {[
            {
              id: "quest",
              label: "Th√¥ng tin",
              icon: FileText,
              description: "N·ªôi dung & Th√¥ng ƒëi·ªáp",
            },
            {
              id: "characters",
              label: "Ng√†nh h·ªçc",
              icon: Sword,
              description: "Chuy√™n ng√†nh & B·∫±ng c·∫•p",
            },
            {
              id: "world",
              label: "Tuy·ªÉn sinh",
              icon: Mountain,
              description: "Lo·∫°i h√¨nh & C∆° s·ªü",
            },
            {
              id: "combat",
              label: "C·∫•u h√¨nh",
              icon: Shield,
              description: "Thi·∫øt l·∫≠p & Y√™u c·∫ßu",
            },
            {
              id: "magic",
              label: "H√¨nh th·ª©c",
              icon: Gem,
              description: "ƒê√†o t·∫°o & Ph∆∞∆°ng ph√°p",
            },
            {
              id: "advanced",
              label: "N√¢ng cao",
              icon: Brain,
              description: "C·∫•u h√¨nh AI",
            },
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as TabType)}
              className={`flex-1 px-3 sm:px-6 py-3 sm:py-4 text-left transition-all duration-300 relative group min-w-[120px] ${
                activeTab === tab.id
                  ? "bg-gradient-to-r from-blue-100 to-blue-200 border-b-2 border-blue-500"
                  : "hover:bg-blue-50"
              }`}
            >
              <div className="flex items-center gap-2 sm:gap-3">
                <div
                  className={`p-1.5 sm:p-2 rounded-lg transition-all ${
                    activeTab === tab.id
                      ? "bg-gradient-to-r from-blue-500 to-blue-600 text-white"
                      : "bg-blue-100 text-blue-600 group-hover:text-blue-700"
                  }`}
                >
                  <tab.icon className="w-3 h-3 sm:w-4 sm:h-4" />
                </div>
                <div className="min-w-0">
                  <div
                    className={`font-medium transition-colors text-xs sm:text-sm truncate ${
                      activeTab === tab.id
                        ? "text-gray-900"
                        : "text-gray-700 group-hover:text-gray-900"
                    }`}
                  >
                    {tab.label}
                  </div>
                  <div className="text-xs text-gray-500 group-hover:text-gray-600 hidden sm:block">
                    {tab.description}
                  </div>
                </div>
              </div>

              {activeTab === tab.id && (
                <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r from-blue-500 to-blue-600"></div>
              )}
            </button>
          ))}
        </div>

        {/* Tab Content */}
        <form
          onSubmit={onSubmit}
          className="p-4 sm:p-8 bg-gradient-to-b from-white to-blue-50"
        >
          {activeTab === "quest" && (
            <div className="space-y-4 sm:space-y-6">
              <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                <div className="p-2 sm:p-3 rounded-xl bg-gradient-to-r from-blue-500 to-blue-600">
                  <FileText className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg sm:text-xl font-semibold text-gray-900">
                    Th√¥ng tin Tuy·ªÉn sinh & ƒê√†o t·∫°o
                  </h3>
                  <p className="text-sm sm:text-base text-gray-600">
                    T·∫°o n·ªôi dung tuy·ªÉn sinh chuy√™n nghi·ªáp v·ªõi k·∫ø ho·∫°ch chi ti·∫øt
                    v√† ƒëi·ªÅu ki·ªán th√†nh c√¥ng
                  </p>
                </div>
              </div>

              <div className="grid gap-4 sm:gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Lightning className="w-4 h-4 text-yellow-500" />
                      N·ªôi dung Ch√≠nh & Th√¥ng ƒëi·ªáp *
                    </span>
                  </label>
                  <textarea
                    required
                    value={kichBan}
                    onChange={(e) => setKichBan(e.target.value)}
                    placeholder="V√≠ d·ª•: Th√¥ng b√°o tuy·ªÉn sinh ng√†nh C√¥ng ngh·ªá th√¥ng tin, h·ªá ƒë·∫°i h·ªçc ch√≠nh quy nƒÉm 2024. T·∫≠p trung v√†o ch·∫•t l∆∞·ª£ng ƒë√†o t·∫°o v√† c∆° h·ªôi vi·ªác l√†m..."
                    className="w-full min-h-[120px] sm:min-h-[140px] rounded-xl border-2 border-blue-200 bg-blue-50/50 px-3 sm:px-4 py-3 sm:py-4 text-sm sm:text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none font-medium"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Globe className="w-4 h-4 text-green-500" />
                      Chi ti·∫øt & Y√™u c·∫ßu ƒê·∫∑c bi·ªát
                    </span>
                  </label>
                  <textarea
                    value={moTa}
                    onChange={(e) => setMoTa(e.target.value)}
                    placeholder="Thi·∫øt l·∫≠p: ƒê·ªãa ƒëi·ªÉm, ƒë·ªëi t∆∞·ª£ng m·ª•c ti√™u, hi·ªáu ·ª©ng ƒë·∫∑c bi·ªát, l·ªùi k√™u g·ªçi h√†nh ƒë·ªông, r√†ng bu·ªôc s√°ng t·∫°o..."
                    className="w-full min-h-[100px] sm:min-h-[120px] rounded-xl border-2 border-blue-200 bg-blue-50/50 px-3 sm:px-4 py-3 sm:py-4 text-sm sm:text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
                  />
                </div>
              </div>
            </div>
          )}

          {activeTab === "characters" && (
            <div className="space-y-4 sm:space-y-6">
              <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                <div className="p-2 sm:p-3 rounded-xl bg-gradient-to-r from-purple-500 to-purple-600">
                  <Sword className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg sm:text-xl font-semibold text-gray-900">
                    Ng√†nh h·ªçc & Chuy√™n ng√†nh
                  </h3>
                  <p className="text-sm sm:text-base text-gray-600">
                    Ch·ªçn c√°c ng√†nh h·ªçc v√† chuy√™n ng√†nh ƒë√†o t·∫°o
                  </p>
                </div>
              </div>

              <div className="grid gap-4 sm:gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Shield className="w-4 h-4 text-blue-500" />
                      B·∫±ng c·∫•p Ch√≠nh
                    </span>
                  </label>
                  <select
                    value={characterClass}
                    onChange={(e) => setCharacterClass(e.target.value)}
                    className="w-full rounded-xl border-2 border-purple-200 bg-purple-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500"
                  >
                    <option value="C·ª≠ nh√¢n">üéì C·ª≠ nh√¢n - ƒê·∫°i h·ªçc</option>
                    <option value="K·ªπ s∆∞">üéì K·ªπ s∆∞ - K·ªπ thu·∫≠t</option>
                    <option value="Th·∫°c sƒ©">üéì Th·∫°c sƒ© - Sau ƒë·∫°i h·ªçc</option>
                    <option value="Ti·∫øn sƒ©">üéì Ti·∫øn sƒ© - Nghi√™n c·ª©u</option>
                    <option value="Ch·ª©ng ch·ªâ">üéì Ch·ª©ng ch·ªâ - Ng·∫Øn h·∫°n</option>
                    <option value="Li√™n th√¥ng">üéì Li√™n th√¥ng - N√¢ng cao</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Target className="w-4 h-4 text-red-500" />
                      Ng√†nh h·ªçc & Chuy√™n ng√†nh
                    </span>
                  </label>
                  <ServiceMultiSelect value={dichVu} onChange={setDichVu} />
                </div>
              </div>
            </div>
          )}

          {activeTab === "world" && (
            <div className="space-y-4 sm:space-y-6">
              <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                <div className="p-2 sm:p-3 rounded-xl bg-gradient-to-r from-green-500 to-green-600">
                  <Mountain className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg sm:text-xl font-semibold text-gray-900">
                    Th√¥ng tin Tuy·ªÉn sinh & C∆° s·ªü
                  </h3>
                  <p className="text-sm sm:text-base text-gray-600">
                    C·∫•u h√¨nh th√¥ng tin tuy·ªÉn sinh, lo·∫°i h√¨nh v√† c∆° s·ªü ƒë√†o t·∫°o
                  </p>
                </div>
              </div>

              <div className="grid gap-4 sm:gap-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <Trophy className="w-4 h-4 text-yellow-500" />
                        Lo·∫°i h√¨nh Tuy·ªÉn sinh
                      </span>
                    </label>
                    <select
                      value={questType}
                      onChange={(e) => setQuestType(e.target.value)}
                      className="w-full rounded-xl border-2 border-green-200 bg-green-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                    >
                      <option value="Tuy·ªÉn sinh">üéì Tuy·ªÉn sinh ƒê·∫°i h·ªçc</option>
                      <option value="Tuy·ªÉn sinh Cao ƒë·∫≥ng">
                        üéì Tuy·ªÉn sinh Cao ƒë·∫≥ng
                      </option>
                      <option value="Tuy·ªÉn sinh Sau ƒë·∫°i h·ªçc">
                        üéì Tuy·ªÉn sinh Sau ƒë·∫°i h·ªçc
                      </option>
                      <option value="Tuy·ªÉn sinh Li√™n th√¥ng">
                        üéì Tuy·ªÉn sinh Li√™n th√¥ng
                      </option>
                      <option value="Tuy·ªÉn sinh V·ª´a h·ªçc v·ª´a l√†m">
                        üéì Tuy·ªÉn sinh V·ª´a h·ªçc v·ª´a l√†m
                      </option>
                      <option value="Tuy·ªÉn sinh Qu·ªëc t·∫ø">
                        üéì Tuy·ªÉn sinh Qu·ªëc t·∫ø
                      </option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <TreePine className="w-4 h-4 text-green-500" />
                        C∆° s·ªü & ƒê·ªãa ƒëi·ªÉm
                      </span>
                    </label>
                    <select
                      value={worldZone}
                      onChange={(e) => setWorldZone(e.target.value)}
                      className="w-full rounded-xl border-2 border-green-200 bg-green-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                    >
                      <option value="C∆° s·ªü ch√≠nh">
                        üè¢ C∆° s·ªü ch√≠nh - TP.HCM
                      </option>
                      <option value="C∆° s·ªü 2">üè¢ C∆° s·ªü 2 - B√¨nh D∆∞∆°ng</option>
                      <option value="C∆° s·ªü 3">üè¢ C∆° s·ªü 3 - ƒê·ªìng Nai</option>
                      <option value="C∆° s·ªü 4">
                        üè¢ C∆° s·ªü 4 - B√† R·ªãa - V≈©ng T√†u
                      </option>
                      <option value="C∆° s·ªü 5">üè¢ C∆° s·ªü 5 - Long An</option>
                      <option value="C∆° s·ªü 6">üè¢ C∆° s·ªü 6 - Ti·ªÅn Giang</option>
                    </select>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Globe className="w-4 h-4 text-blue-500" />
                      B·∫ßu kh√¥ng kh√≠ & Th√¥ng tin B·ªï sung
                    </span>
                  </label>
                  <textarea
                    value={moTa}
                    onChange={(e) => setMoTa(e.target.value)}
                    placeholder="M√¥ t·∫£ th√¥ng tin hi·ªán t·∫°i, ∆∞u ti√™n ƒë·ªëi t∆∞·ª£ng, c∆° ch·∫ø ƒë·∫∑c bi·ªát v√† c√¢n nh·∫Øc chi·∫øn l∆∞·ª£c..."
                    className="w-full min-h-[100px] sm:min-h-[120px] rounded-xl border-2 border-green-200 bg-green-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 resize-none"
                  />
                </div>
              </div>
            </div>
          )}

          {activeTab === "combat" && (
            <div className="space-y-4 sm:space-y-6">
              <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                <div className="p-2 sm:p-3 rounded-xl bg-gradient-to-r from-red-500 to-red-600">
                  <Shield className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg sm:text-xl font-semibold text-gray-900">
                    C·∫•u h√¨nh & Y√™u c·∫ßu
                  </h3>
                  <p className="text-sm sm:text-base text-gray-600">
                    C·∫•u h√¨nh thi·∫øt l·∫≠p, ∆∞u ti√™n m·ª•c ti√™u v√† ƒë·ªông l·ª±c chi·∫øn l∆∞·ª£c
                  </p>
                </div>
              </div>

              <div className="grid gap-4 sm:gap-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <Flame className="w-4 h-4 text-red-500" />
                        Rank Tier
                      </span>
                    </label>
                    <select
                      value={difficulty}
                      onChange={(e) => setDifficulty(e.target.value)}
                      className="w-full rounded-xl border-2 border-red-200 bg-red-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500"
                    >
                      <option value="Iron">üü¢ Iron - Beginner</option>
                      <option value="Bronze">üü° Bronze - Learning</option>
                      <option value="Silver">üî¥ Silver - Developing</option>
                      <option value="Gold">üü£ Gold - Intermediate</option>
                      <option value="Platinum">‚ö´ Platinum - Advanced</option>
                      <option value="Diamond">üíé Diamond - Expert</option>
                      <option value="Master">üëë Master - Elite</option>
                      <option value="Grandmaster">
                        üåü Grandmaster - Top Tier
                      </option>
                      <option value="Challenger">
                        üèÜ Challenger - Best of the Best
                      </option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <Clock className="w-4 h-4 text-yellow-500" />
                        Game Duration
                      </span>
                    </label>
                    <div className="relative">
                      <input
                        type="number"
                        min={15}
                        max={60}
                        value={Math.floor(duration / 60)}
                        onChange={(e) =>
                          setDuration(Number(e.target.value) * 60)
                        }
                        className="w-full rounded-xl border-2 border-red-200 bg-red-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 pr-16"
                      />
                      <div className="absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-500">
                        minutes
                      </div>
                    </div>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Target className="w-4 h-4 text-orange-500" />
                      Teamfight Strategy & Objectives
                    </span>
                  </label>
                  <textarea
                    placeholder="Describe the teamfight approach, objective priorities, engage/disengage patterns, and strategic considerations..."
                    className="w-full min-h-[100px] sm:min-h-[120px] rounded-xl border-2 border-red-200 bg-red-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 resize-none"
                  />
                </div>
              </div>
            </div>
          )}

          {activeTab === "magic" && (
            <div className="space-y-4 sm:space-y-6">
              <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                <div className="p-2 sm:p-3 rounded-xl bg-gradient-to-r from-purple-500 to-purple-600">
                  <Gem className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg sm:text-xl font-semibold text-gray-900">
                    Builds & Itemization
                  </h3>
                  <p className="text-sm sm:text-base text-gray-600">
                    Configure champion builds, item paths, and rune setups
                  </p>
                </div>
              </div>

              <div className="grid gap-4 sm:gap-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <Gem className="w-4 h-4 text-purple-500" />
                        H√¨nh th·ª©c ƒê√†o t·∫°o
                      </span>
                    </label>
                    <select
                      value={magicType}
                      onChange={(e) => setMagicType(e.target.value)}
                      className="w-full rounded-xl border-2 border-purple-200 bg-purple-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500"
                    >
                      <option value="Tr·ª±c tuy·∫øn">üíª Tr·ª±c tuy·∫øn - Online</option>
                      <option value="Tr·ª±c ti·∫øp">üè¢ Tr·ª±c ti·∫øp - Offline</option>
                      <option value="K·∫øt h·ª£p">üîÑ K·∫øt h·ª£p - Hybrid</option>
                      <option value="T·ª´ xa">üåê T·ª´ xa - Remote</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                      <span className="flex items-center gap-2">
                        <Sparkles className="w-4 h-4 text-yellow-500" />
                        C∆∞·ªùng ƒë·ªô ƒê√†o t·∫°o
                      </span>
                    </label>
                    <select className="w-full rounded-xl border-2 border-purple-200 bg-purple-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500">
                      <option value="Nh·∫π nh√†ng">üü¢ Nh·∫π nh√†ng - C∆° b·∫£n</option>
                      <option value="Trung b√¨nh">
                        üü° Trung b√¨nh - C√¢n b·∫±ng
                      </option>
                      <option value="M·∫°nh m·∫Ω">üî¥ M·∫°nh m·∫Ω - N√¢ng cao</option>
                      <option value="Chuy√™n s√¢u">
                        üü£ Chuy√™n s√¢u - Chuy√™n ng√†nh
                      </option>
                      <option value="Nghi√™n c·ª©u">
                        ‚ö´ Nghi√™n c·ª©u - H·ªçc thu·∫≠t
                      </option>
                    </select>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-2 sm:mb-3">
                    <span className="flex items-center gap-2">
                      <Brain className="w-4 h-4 text-indigo-500" />
                      Y√™u c·∫ßu ƒê√†o t·∫°o & Th√¥ng tin
                    </span>
                  </label>
                  <textarea
                    placeholder="M√¥ t·∫£ ki·∫øn th·ª©c ƒë√†o t·∫°o c·∫ßn thi·∫øt, th√†nh ph·∫ßn kh√≥a h·ªçc, t√†i li·ªáu h·ªçc t·∫≠p v√† y√™u c·∫ßu th√¥ng tin..."
                    className="w-full min-h-[100px] sm:min-h-[120px] rounded-xl border-2 border-purple-200 bg-purple-50/50 px-3 sm:px-4 py-3 sm:py-4 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 resize-none"
                  />
                </div>
              </div>
            </div>
          )}

          {activeTab === "settings" && (
            <div className="space-y-6">
              <div className="flex items-center gap-3 mb-6">
                <div className="p-3 rounded-xl bg-gradient-to-r from-red-500 to-red-600">
                  <Palette className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900">
                    Nh·∫≠n di·ªán th∆∞∆°ng hi·ªáu & Phong c√°ch th·ªã gi√°c
                  </h3>
                  <p className="text-gray-600">
                    C·∫•u h√¨nh c√°c y·∫øu t·ªë th∆∞∆°ng hi·ªáu v√† s·ªü th√≠ch th·∫©m m·ªπ
                  </p>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Building2 className="inline w-4 h-4 mr-2" />
                    Lƒ©nh v·ª±c ng√†nh ngh·ªÅ
                  </label>
                  <select
                    value={nganh}
                    onChange={(e) => setNganh(e.target.value)}
                    className="w-full rounded-xl border-2 border-red-200 bg-red-50/50 px-4 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500"
                  >
                    <option value="Gi√°o d·ª•c & ƒê√†o t·∫°o">
                      Gi√°o d·ª•c & ƒê√†o t·∫°o
                    </option>
                    <option value="ƒê·∫°i h·ªçc & Cao ƒë·∫≥ng">
                      ƒê·∫°i h·ªçc & Cao ƒë·∫≥ng
                    </option>
                    <option value="Tuy·ªÉn sinh & T∆∞ v·∫•n">
                      Tuy·ªÉn sinh & T∆∞ v·∫•n
                    </option>
                    <option value="ƒê√†o t·∫°o ngh·ªÅ">ƒê√†o t·∫°o ngh·ªÅ & K·ªπ nƒÉng</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Crown className="inline w-4 h-4 mr-2" />
                    T√™n th∆∞∆°ng hi·ªáu
                  </label>
                  <input
                    value={brand}
                    onChange={(e) => setBrand(e.target.value)}
                    placeholder="Nh·∫≠p t√™n tr∆∞·ªùng ƒë·∫°i h·ªçc ho·∫∑c t·ªï ch·ª©c gi√°o d·ª•c"
                    className="w-full rounded-xl border-2 border-red-200 bg-red-50/50 px-4 py-3 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500"
                  />
                </div>

                <div className="md:col-span-2">
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Sparkles className="inline w-4 h-4 mr-2" />
                    T√¥ng ƒëi·ªáu th∆∞∆°ng hi·ªáu & Phong c√°ch th·ªã gi√°c
                  </label>
                  <select
                    value={tone}
                    onChange={(e) => setTone(e.target.value)}
                    className="w-full rounded-xl border-2 border-red-200 bg-red-50/50 px-4 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500"
                  >
                    <option value="luxury ‚Äì sophisticated ‚Äì premium">
                      Sang tr·ªçng ‚Ä¢ Tinh t·∫ø ‚Ä¢ Cao c·∫•p
                    </option>
                    <option value="modern ‚Äì minimalist ‚Äì elegant">
                      Hi·ªán ƒë·∫°i ‚Ä¢ T·ªëi gi·∫£n ‚Ä¢ Thanh l·ªãch
                    </option>
                    <option value="warm ‚Äì approachable ‚Äì professional">
                      ·∫§m √°p ‚Ä¢ Th√¢n thi·ªán ‚Ä¢ Chuy√™n nghi·ªáp
                    </option>
                    <option value="bold ‚Äì confident ‚Äì innovative">
                      T√°o b·∫°o ‚Ä¢ T·ª± tin ‚Ä¢ S√°ng t·∫°o
                    </option>
                    <option value="serene ‚Äì healing ‚Äì trustworthy">
                      Thanh th·∫£n ‚Ä¢ Ch·ªØa l√†nh ‚Ä¢ ƒê√°ng tin c·∫≠y
                    </option>
                  </select>
                </div>
              </div>
            </div>
          )}

          {activeTab === "advanced" && (
            <div className="space-y-6">
              <div className="flex items-center gap-3 mb-6">
                <div className="p-3 rounded-xl bg-gradient-to-r from-indigo-500 to-indigo-600">
                  <Brain className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900">
                    Advanced AI Configuration
                  </h3>
                  <p className="text-gray-600">
                    Fine-tune AI parameters for optimal quest generation results
                  </p>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Clock className="inline w-4 h-4 mr-2 text-yellow-500" />
                    Quest Duration Target (seconds)
                  </label>
                  <div className="relative">
                    <input
                      type="number"
                      min={30}
                      max={600}
                      value={duration}
                      onChange={(e) => setDuration(Number(e.target.value))}
                      className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50/50 px-4 py-3 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 pr-16"
                    />
                    <div className="absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-500">
                      {Math.floor(duration / 60)}:
                      {(duration % 60).toString().padStart(2, "0")}
                    </div>
                  </div>
                  <div className="mt-2 text-xs text-gray-500">
                    Recommended: 60-180 seconds for optimal engagement
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Target className="inline w-4 h-4 mr-2 text-blue-500" />
                    AI Creativity Level
                  </label>
                  <select className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50/50 px-4 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    <option value="conservative">
                      üü¢ Conservative - Safe & Traditional
                    </option>
                    <option value="balanced">
                      üü° Balanced - Mix of Safe & Creative
                    </option>
                    <option value="creative">
                      üî¥ Creative - Innovative & Unique
                    </option>
                    <option value="experimental">
                      üü£ Experimental - Bold & Unconventional
                    </option>
                    <option value="revolutionary">
                      ‚ö´ Revolutionary - Groundbreaking Ideas
                    </option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Globe className="inline w-4 h-4 mr-2 text-green-500" />
                    World Lore Depth
                  </label>
                  <select className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50/50 px-4 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    <option value="basic">
                      üü¢ Basic - Essential Information
                    </option>
                    <option value="detailed">üü° Detailed - Rich Context</option>
                    <option value="comprehensive">
                      üî¥ Comprehensive - Deep Lore
                    </option>
                    <option value="extensive">
                      üü£ Extensive - Complete World Building
                    </option>
                    <option value="encyclopedic">
                      ‚ö´ Encyclopedic - Master Level Detail
                    </option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-900 mb-3">
                    <Sparkles className="inline w-4 h-4 mr-2 text-purple-500" />
                    Quest Complexity
                  </label>
                  <select className="w-full rounded-xl border-2 border-indigo-200 bg-indigo-50/50 px-4 py-3 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    <option value="simple">
                      üü¢ Simple - Straightforward Quest
                    </option>
                    <option value="moderate">
                      üü° Moderate - Some Complexity
                    </option>
                    <option value="complex">
                      üî¥ Complex - Multi-layered Story
                    </option>
                    <option value="intricate">
                      üü£ Intricate - Deep Plot Threads
                    </option>
                    <option value="masterpiece">
                      ‚ö´ Masterpiece - Epic Complexity
                    </option>
                  </select>
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-900 mb-3">
                  <Brain className="inline w-4 h-4 mr-2 text-indigo-500" />
                  Special AI Instructions
                </label>
                <textarea
                  placeholder="Add any special instructions for the AI, specific requirements, or creative directions..."
                  className="w-full min-h-[100px] rounded-xl border-2 border-indigo-200 bg-indigo-50/50 px-4 py-3 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 resize-none"
                />
              </div>
            </div>
          )}

          {/* Submit Section */}
          <div className="flex items-center justify-between pt-8 border-t-2 border-blue-100 mt-8">
            <div className="text-sm text-gray-600">
              <span className="inline-flex items-center gap-2">
                <AlertCircle className="w-4 h-4 text-blue-500" />
                All fields marked with * are required for processing
              </span>
            </div>

            <button
              type="submit"
              disabled={loading || !kichBan.trim()}
              className="inline-flex items-center gap-3 rounded-xl bg-gradient-to-r from-yellow-500 via-orange-500 to-red-500 hover:from-yellow-600 hover:via-orange-600 hover:to-red-600 disabled:opacity-50 disabled:cursor-not-allowed transform hover:scale-105 shadow-lg px-8 py-4 text-white font-semibold"
            >
              {loading ? (
                <>
                  <Loader2 className="w-5 h-5 animate-spin" />
                  ƒêang t·∫°o K·ªãch b·∫£n...
                </>
              ) : (
                <>
                  <FileText className="w-5 h-5" />
                  T·∫°o K·ªãch b·∫£n Tuy·ªÉn sinh
                </>
              )}
            </button>
          </div>
        </form>
      </div>

      {/* Results Section */}
      {result && (
        <section className="bg-white rounded-2xl border-2 border-red-200 p-8 shadow-xl bg-gradient-to-b from-white to-red-50 mx-4 sm:mx-0 mt-6">
          <div className="flex items-center gap-3 mb-6">
            {result.ok ? (
              <CheckCircle className="w-6 h-6 text-green-600" />
            ) : (
              <XCircle className="w-6 h-6 text-red-600" />
            )}
            <h2 className="text-xl font-semibold text-gray-900">
              K·∫øt qu·∫£ x·ª≠ l√Ω
            </h2>
          </div>

          {result.ok ? (
            <div className="space-y-4">
              <div className="flex items-center gap-2 text-green-600 font-medium">
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                G·ª≠i th√†nh c√¥ng ƒë·∫øn h·ªá th·ªëng n8n
              </div>

              {"session_id" in result && (
                <div className="text-sm text-gray-600">
                  <span className="font-medium">M√£ phi√™n l√†m vi·ªác:</span>{" "}
                  <code className="bg-red-100 px-2 py-1 rounded text-red-700">
                    {result.session_id}
                  </code>
                </div>
              )}
            </div>
          ) : (
            <div className="space-y-4">
              <div className="flex items-center gap-2 text-red-600 font-medium">
                <div className="w-2 h-2 bg-red-500 rounded-full animate-pulse"></div>
                G·ª≠i th·∫•t b·∫°i
              </div>

              {result.message && (
                <div className="text-gray-700">{result.message}</div>
              )}

              {result.errors && (
                <div className="bg-red-50 border-2 border-red-200 rounded-xl p-4">
                  <h4 className="text-sm font-medium text-red-700 mb-2">
                    Chi ti·∫øt l·ªói:
                  </h4>
                  <pre className="text-sm text-red-600 overflow-x-auto whitespace-pre-wrap">
                    {JSON.stringify(result.errors, null, 2)}
                  </pre>
                </div>
              )}
            </div>
          )}
        </section>
      )}

      {/* Footer */}
      <footer className="text-center py-8 space-y-4">
        <div className="flex justify-center items-center gap-3 text-gray-600">
          <Gem className="w-5 h-5 text-yellow-500 animate-pulse" />
          <span className="text-sm font-medium">
            ƒê∆∞·ª£c t·∫°o b·ªüi{" "}
            <span className="bg-gradient-to-r from-blue-500 to-indigo-500 bg-clip-text text-transparent font-semibold">
              VLU UNIVERSITY
            </span>
          </span>
          <Gem className="w-5 h-5 text-yellow-500 animate-pulse" />
        </div>
        <div className="flex justify-center items-center gap-6 text-xs text-gray-500">
          <span className="flex items-center gap-1">
            <FileText className="w-3 h-3 text-blue-500" />
            T·∫°o K·ªãch b·∫£n Tuy·ªÉn sinh
          </span>
          <span>‚Ä¢</span>
          <span className="flex items-center gap-1">
            <Trophy className="w-3 h-3 text-purple-500" />
            K·∫ø ho·∫°ch Gi√°o d·ª•c
          </span>
          <span>‚Ä¢</span>
          <span>¬© {new Date().getFullYear()}</span>
        </div>
        <div className="flex justify-center items-center gap-4 text-xs text-gray-400">
          <span className="flex items-center gap-1">
            <Trophy className="w-3 h-3 text-yellow-500" />
            V√¨ T∆∞∆°ng lai!
          </span>
          <span>‚Ä¢</span>
          <span className="flex items-center gap-1">
            <Crown className="w-3 h-3 text-blue-500" />
            V√¨ Tri th·ª©c!
          </span>
        </div>
      </footer>
    </main>
  );
}
